@page "/userlist"
@attribute [Authorize(Roles = "Administrator,User")]
@using BlazorAspNetCoreHostedDemo.Shared
@using Microsoft.AspNetCore.Components.Authorization
@inject HttpClient httpClient
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navManager
@using System.Net.Http.Headers
@inject IJSRuntime js


<style>
    .example:after {
        content: '...';
        display: inline-block;
        color: #000;
        font-size: 20px;
        position: relative;
        top: -40px;
        left: 31px;
    }

    .example {
        width: 600px;
        text-overflow: ellipsis;
        overflow: hidden;
        height: 5.1em;
        display: block;
        overflow: hidden;
        position: relative;
        padding: 0 0.5em;
    }

    .left {
        float: left;
    }


</style>


@if (userList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <PageTitle>User List</PageTitle>
    <h3>User List</h3>

    <div>
        <NavLink class="nav-link" href="adduser">
            <button class="left btn btn-primary">Add New User</button>
        </NavLink>

        <br />
        <br />

        <table class="table">
            <thead>
                <tr>
                    <th>User Name</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Role</th>
                    <th>Email</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var p in userList)
                {
                    <tr>
                        <td>
                            <NavLink href="@($"userdetailpage/{p.Id}")">
                                <span>@p.UserName</span>
                            </NavLink>
                        </td>
                        <td>@p.FirstName</td>
                        <td>@p.LastName</td>
                        <td>@p.Role</td>
                        <td>@p.Email</td>

@*                        <td>
                            <button type="button" class="btn btn-danger" @onclick="async () => {await DeleteProduct(p.Id);}"><i class="fa fa-trash" /></button>
                         </td>
                        <td>
                            <NavLink href="@($"editproductpage/{p.Id}")">
                                <button type="button" class="btn btn-primary"><i class="fa fa-edit" /></button>
                            </NavLink>                            
                        </td>*@
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<UserAccount>? userList;

    protected override async Task OnInitializedAsync()
    {
        userList = await httpClient.GetFromJsonAsync<List<UserAccount>>("api/Account/GetUsers");
        await base.OnInitializedAsync();
    }




}
